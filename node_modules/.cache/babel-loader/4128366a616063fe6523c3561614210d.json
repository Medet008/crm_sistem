{"remainingRequest":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/babel-loader/lib/index.js!/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medetkalpebaev/Documents/crm_sistem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medetkalpebaev/Documents/crm_sistem/src/components/Feed.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medetkalpebaev/Documents/crm_sistem/src/components/Feed.vue","mtime":1599941887000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL21lZGV0a2FscGViYWV2L0RvY3VtZW50cy9jcm1fc2lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgc3RyaW5naWZ5LCBwYXJzZVVybCB9IGZyb20gJ3F1ZXJ5LXN0cmluZyc7CmltcG9ydCB7IGFjdGlvblR5cGVzIH0gZnJvbSAnQC9zdG9yZS9tb2R1bGVzL2ZlZWQnOwppbXBvcnQgTWN2UGFnaW5hdGlvbiBmcm9tICdAL2NvbXBvbmVudHMvUGFnaW5hdGlvbic7CmltcG9ydCB7IGxpbWl0IGFzIF9saW1pdCB9IGZyb20gJ0AvaGVscGVycy92YXJzJzsKaW1wb3J0IE1jdkxvYWRpbmcgZnJvbSAnQC9jb21wb25lbnRzL0xvYWRpbmcnOwppbXBvcnQgTWN2RXJyb3JNZXNzYWdlIGZyb20gJ0AvY29tcG9uZW50cy9FcnJvck1lc3NhZ2UnOwppbXBvcnQgTWN2VGFnTGlzdCBmcm9tICdAL2NvbXBvbmVudHMvVGFnTGlzdCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTWN2RmVlZCcsCiAgY29tcG9uZW50czogewogICAgTWN2UGFnaW5hdGlvbjogTWN2UGFnaW5hdGlvbiwKICAgIE1jdkxvYWRpbmc6IE1jdkxvYWRpbmcsCiAgICBNY3ZFcnJvck1lc3NhZ2U6IE1jdkVycm9yTWVzc2FnZSwKICAgIE1jdlRhZ0xpc3Q6IE1jdlRhZ0xpc3QKICB9LAogIHByb3BzOiB7CiAgICBhcGlVcmw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoewogICAgaXNMb2FkaW5nOiBmdW5jdGlvbiBpc0xvYWRpbmcoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmZlZWQuaXNMb2FkaW5nOwogICAgfSwKICAgIGZlZWQ6IGZ1bmN0aW9uIGZlZWQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmZlZWQuZGF0YTsKICAgIH0sCiAgICBlcnJvcjogZnVuY3Rpb24gZXJyb3Ioc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmZlZWQuZXJyb3I7CiAgICB9CiAgfSkpLCB7fSwgewogICAgbGltaXQ6IGZ1bmN0aW9uIGxpbWl0KCkgewogICAgICByZXR1cm4gX2xpbWl0OwogICAgfSwKICAgIGJhc2VVcmw6IGZ1bmN0aW9uIGJhc2VVcmwoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5wYXRoOwogICAgfSwKICAgIGN1cnJlbnRQYWdlOiBmdW5jdGlvbiBjdXJyZW50UGFnZSgpIHsKICAgICAgcmV0dXJuIE51bWJlcih0aGlzLiRyb3V0ZS5xdWVyeS5wYWdlIHx8ICcxJyk7CiAgICB9LAogICAgb2Zmc2V0OiBmdW5jdGlvbiBvZmZzZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRQYWdlICogX2xpbWl0IC0gX2xpbWl0OwogICAgfQogIH0pLAogIHdhdGNoOiB7CiAgICBjdXJyZW50UGFnZTogZnVuY3Rpb24gY3VycmVudFBhZ2UoKSB7CiAgICAgIHRoaXMuZmV0Y2hGZWVkKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5mZXRjaEZlZWQoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoRmVlZDogZnVuY3Rpb24gZmV0Y2hGZWVkKCkgewogICAgICB2YXIgcGFyc2VkVXJsID0gcGFyc2VVcmwodGhpcy5hcGlVcmwpOwogICAgICB2YXIgc3RyaW5naWZpZWRQYXJhbXMgPSBzdHJpbmdpZnkoX29iamVjdFNwcmVhZCh7CiAgICAgICAgbGltaXQ6IF9saW1pdCwKICAgICAgICBvZmZzZXQ6IHRoaXMub2Zmc2V0CiAgICAgIH0sIHBhcnNlZFVybC5xdWVyeSkpOwogICAgICB2YXIgYXBpVXJsV2l0aFBhcmFtcyA9ICIiLmNvbmNhdChwYXJzZWRVcmwudXJsLCAiPyIpLmNvbmNhdChzdHJpbmdpZmllZFBhcmFtcyk7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKGFjdGlvblR5cGVzLmdldEZlZWQsIHsKICAgICAgICBhcGlVcmw6IGFwaVVybFdpdGhQYXJhbXMKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Feed.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,SAAA,EAAA,QAAA,QAAA,cAAA;AAEA,SAAA,WAAA,QAAA,sBAAA;AACA,OAAA,aAAA,MAAA,yBAAA;AACA,SAAA,KAAA,IAAA,MAAA,QAAA,gBAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,eAAA,MAAA,2BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,UAAA,EAAA,UAFA;AAGA,IAAA,eAAA,EAAA,eAHA;AAIA,IAAA,UAAA,EAAA;AAJA,GAFA;AAQA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GARA;AAcA,EAAA,QAAA,kCACA,QAAA,CAAA;AACA,IAAA,SAAA,EAAA,mBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,SAAA;AAAA,KADA;AAEA,IAAA,IAAA,EAAA,cAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AAAA,KAFA;AAGA,IAAA,KAAA,EAAA,eAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,KAAA;AAAA;AAHA,GAAA,CADA;AAMA,IAAA,KANA,mBAMA;AACA,aAAA,MAAA;AACA,KARA;AASA,IAAA,OATA,qBASA;AACA,aAAA,KAAA,MAAA,CAAA,IAAA;AACA,KAXA;AAYA,IAAA,WAZA,yBAYA;AACA,aAAA,MAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,IAAA,GAAA,CAAA;AACA,KAdA;AAeA,IAAA,MAfA,oBAeA;AACA,aAAA,KAAA,WAAA,GAAA,MAAA,GAAA,MAAA;AACA;AAjBA,IAdA;AAiCA,EAAA,KAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,SAAA;AACA;AAHA,GAjCA;AAsCA,EAAA,OAtCA,qBAsCA;AACA,SAAA,SAAA;AACA,GAxCA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,KAAA,MAAA,CAAA;AACA,UAAA,iBAAA,GAAA,SAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,MAAA,EAAA,KAAA;AAFA,SAGA,SAAA,CAAA,KAHA,EAAA;AAKA,UAAA,gBAAA,aAAA,SAAA,CAAA,GAAA,cAAA,iBAAA,CAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,WAAA,CAAA,OAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA;AACA;AAVA;AAzCA,CAAA","sourcesContent":["<template>\n  <div>\n    <mcv-loading v-if=\"isLoading\" />\n    <mcv-error-message v-if=\"error\" />\n\n    <div v-if=\"feed\">\n      <div\n        class=\"article-preview\"\n        v-for=\"(article, index) in feed.articles\"\n        :key=\"index\"\n      >\n        <div class=\"article-meta\">\n          <router-link\n            :to=\"{name: 'userProfile', params: {slug: article.author.username}}\"\n          >\n            <img :src=\"article.author.image\" />\n          </router-link>\n          <div class=\"info\">\n            <router-link\n              :to=\"{\n                name: 'userProfile',\n                params: {slug: article.author.username}\n              }\"\n            >\n              {{ article.author.username }}\n            </router-link>\n            <span class=\"date\">{{ article.createdAt }}</span>\n          </div>\n          <div class=\"pull-xs-right\">ADD TO FAVORITES</div>\n        </div>\n        <router-link\n          :to=\"{name: 'article', params: {slug: article.slug}}\"\n          class=\"preview-link\"\n        >\n          <h1>{{ article.title }}</h1>\n          <p>{{ article.description }}</p>\n          <span>Read more...</span>\n          <mcv-tag-list :tags=\"article.tagList\" />\n        </router-link>\n      </div>\n      <mcv-pagination\n        :total=\"feed.articlesCount\"\n        :limit=\"limit\"\n        :url=\"baseUrl\"\n        :current-page=\"currentPage\"\n      ></mcv-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\nimport {stringify, parseUrl} from 'query-string'\n\nimport {actionTypes} from '@/store/modules/feed'\nimport McvPagination from '@/components/Pagination'\nimport {limit} from '@/helpers/vars'\nimport McvLoading from '@/components/Loading'\nimport McvErrorMessage from '@/components/ErrorMessage'\nimport McvTagList from '@/components/TagList'\n\nexport default {\n  name: 'McvFeed',\n  components: {\n    McvPagination,\n    McvLoading,\n    McvErrorMessage,\n    McvTagList\n  },\n  props: {\n    apiUrl: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    ...mapState({\n      isLoading: state => state.feed.isLoading,\n      feed: state => state.feed.data,\n      error: state => state.feed.error\n    }),\n    limit() {\n      return limit\n    },\n    baseUrl() {\n      return this.$route.path\n    },\n    currentPage() {\n      return Number(this.$route.query.page || '1')\n    },\n    offset() {\n      return this.currentPage * limit - limit\n    }\n  },\n  watch: {\n    currentPage() {\n      this.fetchFeed()\n    }\n  },\n  mounted() {\n    this.fetchFeed()\n  },\n  methods: {\n    fetchFeed() {\n      const parsedUrl = parseUrl(this.apiUrl)\n      const stringifiedParams = stringify({\n        limit,\n        offset: this.offset,\n        ...parsedUrl.query\n      })\n      const apiUrlWithParams = `${parsedUrl.url}?${stringifiedParams}`\n      this.$store.dispatch(actionTypes.getFeed, {apiUrl: apiUrlWithParams})\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}
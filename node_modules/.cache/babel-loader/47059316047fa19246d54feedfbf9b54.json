{"remainingRequest":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/babel-loader/lib/index.js!/Users/medetkalpebaev/Documents/crm_sistem/node_modules/eslint-loader/index.js??ref--13-0!/Users/medetkalpebaev/Documents/crm_sistem/src/store/modules/article.js","dependencies":[{"path":"/Users/medetkalpebaev/Documents/crm_sistem/src/store/modules/article.js","mtime":1599941887000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL21lZGV0a2FscGViYWV2L0RvY3VtZW50cy9jcm1fc2lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Cgp2YXIgX211dGF0aW9ucywgX2FjdGlvbnM7CgppbXBvcnQgYXJ0aWNsZUFwaSBmcm9tICdAL2FwaS9hcnRpY2xlJzsKdmFyIHN0YXRlID0gewogIGRhdGE6IG51bGwsCiAgaXNMb2FkaW5nOiBmYWxzZSwKICBlcnJvcjogbnVsbAp9OwpleHBvcnQgdmFyIG11dGF0aW9uVHlwZXMgPSB7CiAgZ2V0QXJ0aWNsZVN0YXJ0OiAnW2FydGljbGVdIEdldCBhcnRpY2xlIHN0YXJ0JywKICBnZXRBcnRpY2xlU3VjY2VzczogJ1thcnRpY2xlXSBHZXQgYXJ0aWNsZSBzdWNjZXNzJywKICBnZXRBcnRpY2xlRmFpbHVyZTogJ1thcnRpY2xlXSBHZXQgYXJ0aWNsZSBmYWlsdXJlJywKICBkZWxldGVBcnRpY2xlU3RhcnQ6ICdbYXJ0aWNsZV0gRGVsZXRlIGFydGljbGUgc3RhcnQnLAogIGRlbGV0ZUFydGljbGVTdWNjZXNzOiAnW2FydGljbGVdIERlbGV0ZSBhcnRpY2xlIHN1Y2Nlc3MnLAogIGRlbGV0ZUFydGljbGVGYWlsdXJlOiAnW2FydGljbGVdIERlbGV0ZSBhcnRpY2xlIGZhaWx1cmUnCn07CmV4cG9ydCB2YXIgYWN0aW9uVHlwZXMgPSB7CiAgZ2V0QXJ0aWNsZTogJ1thcnRpY2xlXSBHZXQgYXJ0aWNsZScsCiAgZGVsZXRlQXJ0aWNsZTogJ1thcnRpY2xlXSBEZWxldGUgYXJ0aWNsZScKfTsKdmFyIG11dGF0aW9ucyA9IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBtdXRhdGlvblR5cGVzLmdldEFydGljbGVTdGFydCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUuaXNMb2FkaW5nID0gdHJ1ZTsKICBzdGF0ZS5kYXRhID0gbnVsbDsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBtdXRhdGlvblR5cGVzLmdldEFydGljbGVTdWNjZXNzLCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICBzdGF0ZS5pc0xvYWRpbmcgPSBmYWxzZTsKICBzdGF0ZS5kYXRhID0gcGF5bG9hZDsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBtdXRhdGlvblR5cGVzLmdldEFydGljbGVGYWlsdXJlLCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5pc0xvYWRpbmcgPSBmYWxzZTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBtdXRhdGlvblR5cGVzLmRlbGV0ZUFydGljbGVTdGFydCwgZnVuY3Rpb24gKCkge30pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgbXV0YXRpb25UeXBlcy5kZWxldGVBcnRpY2xlU3VjY2VzcywgZnVuY3Rpb24gKCkge30pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgbXV0YXRpb25UeXBlcy5kZWxldGVBcnRpY2xlRmFpbHVyZSwgZnVuY3Rpb24gKCkge30pLCBfbXV0YXRpb25zKTsKdmFyIGFjdGlvbnMgPSAoX2FjdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBhY3Rpb25UeXBlcy5nZXRBcnRpY2xlLCBmdW5jdGlvbiAoY29udGV4dCwgX3JlZikgewogIHZhciBzbHVnID0gX3JlZi5zbHVnOwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgY29udGV4dC5jb21taXQobXV0YXRpb25UeXBlcy5nZXRBcnRpY2xlU3RhcnQpOwogICAgYXJ0aWNsZUFwaS5nZXRBcnRpY2xlKHNsdWcpLnRoZW4oZnVuY3Rpb24gKGFydGljbGUpIHsKICAgICAgY29udGV4dC5jb21taXQobXV0YXRpb25UeXBlcy5nZXRBcnRpY2xlU3VjY2VzcywgYXJ0aWNsZSk7CiAgICAgIHJlc29sdmUoYXJ0aWNsZSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgIGNvbnRleHQuY29tbWl0KG11dGF0aW9uVHlwZXMuZ2V0QXJ0aWNsZUZhaWx1cmUpOwogICAgfSk7CiAgfSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIGFjdGlvblR5cGVzLmRlbGV0ZUFydGljbGUsIGZ1bmN0aW9uIChjb250ZXh0LCBfcmVmMikgewogIHZhciBzbHVnID0gX3JlZjIuc2x1ZzsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgIGNvbnRleHQuY29tbWl0KG11dGF0aW9uVHlwZXMuZGVsZXRlQXJ0aWNsZVN0YXJ0KTsKICAgIGFydGljbGVBcGkuZGVsZXRlQXJ0aWNsZShzbHVnKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgY29udGV4dC5jb21taXQobXV0YXRpb25UeXBlcy5kZWxldGVBcnRpY2xlU3VjY2Vzcyk7CiAgICAgIHJlc29sdmUoKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgY29udGV4dC5jb21taXQobXV0YXRpb25UeXBlcy5kZWxldGVBcnRpY2xlRmFpbHVyZSk7CiAgICB9KTsKICB9KTsKfSksIF9hY3Rpb25zKTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/Users/medetkalpebaev/Documents/crm_sistem/src/store/modules/article.js"],"names":["articleApi","state","data","isLoading","error","mutationTypes","getArticleStart","getArticleSuccess","getArticleFailure","deleteArticleStart","deleteArticleSuccess","deleteArticleFailure","actionTypes","getArticle","deleteArticle","mutations","payload","actions","context","slug","Promise","resolve","commit","then","article","catch"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,IADM;AAEZC,EAAAA,SAAS,EAAE,KAFC;AAGZC,EAAAA,KAAK,EAAE;AAHK,CAAd;AAMA,OAAO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,eAAe,EAAE,6BADU;AAE3BC,EAAAA,iBAAiB,EAAE,+BAFQ;AAG3BC,EAAAA,iBAAiB,EAAE,+BAHQ;AAK3BC,EAAAA,kBAAkB,EAAE,gCALO;AAM3BC,EAAAA,oBAAoB,EAAE,kCANK;AAO3BC,EAAAA,oBAAoB,EAAE;AAPK,CAAtB;AAUP,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,UAAU,EAAE,uBADa;AAEzBC,EAAAA,aAAa,EAAE;AAFU,CAApB;AAKP,IAAMC,SAAS,iDACZV,aAAa,CAACC,eADF,YACmBL,KADnB,EAC0B;AACrCA,EAAAA,KAAK,CAACE,SAAN,GAAkB,IAAlB;AACAF,EAAAA,KAAK,CAACC,IAAN,GAAa,IAAb;AACD,CAJY,+BAKZG,aAAa,CAACE,iBALF,YAKqBN,KALrB,EAK4Be,OAL5B,EAKqC;AAChDf,EAAAA,KAAK,CAACE,SAAN,GAAkB,KAAlB;AACAF,EAAAA,KAAK,CAACC,IAAN,GAAac,OAAb;AACD,CARY,+BASZX,aAAa,CAACG,iBATF,YASqBP,KATrB,EAS4B;AACvCA,EAAAA,KAAK,CAACE,SAAN,GAAkB,KAAlB;AACD,CAXY,+BAYZE,aAAa,CAACI,kBAZF,cAYwB,CAAE,CAZ1B,+BAaZJ,aAAa,CAACK,oBAbF,cAa0B,CAAE,CAb5B,+BAcZL,aAAa,CAACM,oBAdF,cAc0B,CAAE,CAd5B,cAAf;AAiBA,IAAMM,OAAO,6CACVL,WAAW,CAACC,UADF,YACcK,OADd,QAC+B;AAAA,MAAPC,IAAO,QAAPA,IAAO;AACxC,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BH,IAAAA,OAAO,CAACI,MAAR,CAAejB,aAAa,CAACC,eAA7B;AACAN,IAAAA,UAAU,CACPa,UADH,CACcM,IADd,EAEGI,IAFH,CAEQ,UAAAC,OAAO,EAAI;AACfN,MAAAA,OAAO,CAACI,MAAR,CAAejB,aAAa,CAACE,iBAA7B,EAAgDiB,OAAhD;AACAH,MAAAA,OAAO,CAACG,OAAD,CAAP;AACD,KALH,EAMGC,KANH,CAMS,YAAM;AACXP,MAAAA,OAAO,CAACI,MAAR,CAAejB,aAAa,CAACG,iBAA7B;AACD,KARH;AASD,GAXM,CAAP;AAYD,CAdU,6BAeVI,WAAW,CAACE,aAfF,YAeiBI,OAfjB,SAekC;AAAA,MAAPC,IAAO,SAAPA,IAAO;AAC3C,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BH,IAAAA,OAAO,CAACI,MAAR,CAAejB,aAAa,CAACI,kBAA7B;AACAT,IAAAA,UAAU,CACPc,aADH,CACiBK,IADjB,EAEGI,IAFH,CAEQ,YAAM;AACVL,MAAAA,OAAO,CAACI,MAAR,CAAejB,aAAa,CAACK,oBAA7B;AACAW,MAAAA,OAAO;AACR,KALH,EAMGI,KANH,CAMS,YAAM;AACXP,MAAAA,OAAO,CAACI,MAAR,CAAejB,aAAa,CAACM,oBAA7B;AACD,KARH;AASD,GAXM,CAAP;AAYD,CA5BU,YAAb;AA+BA,eAAe;AACbV,EAAAA,KAAK,EAALA,KADa;AAEbgB,EAAAA,OAAO,EAAPA,OAFa;AAGbF,EAAAA,SAAS,EAATA;AAHa,CAAf","sourcesContent":["import articleApi from '@/api/article'\n\nconst state = {\n  data: null,\n  isLoading: false,\n  error: null\n}\n\nexport const mutationTypes = {\n  getArticleStart: '[article] Get article start',\n  getArticleSuccess: '[article] Get article success',\n  getArticleFailure: '[article] Get article failure',\n\n  deleteArticleStart: '[article] Delete article start',\n  deleteArticleSuccess: '[article] Delete article success',\n  deleteArticleFailure: '[article] Delete article failure'\n}\n\nexport const actionTypes = {\n  getArticle: '[article] Get article',\n  deleteArticle: '[article] Delete article'\n}\n\nconst mutations = {\n  [mutationTypes.getArticleStart](state) {\n    state.isLoading = true\n    state.data = null\n  },\n  [mutationTypes.getArticleSuccess](state, payload) {\n    state.isLoading = false\n    state.data = payload\n  },\n  [mutationTypes.getArticleFailure](state) {\n    state.isLoading = false\n  },\n  [mutationTypes.deleteArticleStart]() {},\n  [mutationTypes.deleteArticleSuccess]() {},\n  [mutationTypes.deleteArticleFailure]() {}\n}\n\nconst actions = {\n  [actionTypes.getArticle](context, {slug}) {\n    return new Promise(resolve => {\n      context.commit(mutationTypes.getArticleStart)\n      articleApi\n        .getArticle(slug)\n        .then(article => {\n          context.commit(mutationTypes.getArticleSuccess, article)\n          resolve(article)\n        })\n        .catch(() => {\n          context.commit(mutationTypes.getArticleFailure)\n        })\n    })\n  },\n  [actionTypes.deleteArticle](context, {slug}) {\n    return new Promise(resolve => {\n      context.commit(mutationTypes.deleteArticleStart)\n      articleApi\n        .deleteArticle(slug)\n        .then(() => {\n          context.commit(mutationTypes.deleteArticleSuccess)\n          resolve()\n        })\n        .catch(() => {\n          context.commit(mutationTypes.deleteArticleFailure)\n        })\n    })\n  }\n}\n\nexport default {\n  state,\n  actions,\n  mutations\n}\n"]}]}
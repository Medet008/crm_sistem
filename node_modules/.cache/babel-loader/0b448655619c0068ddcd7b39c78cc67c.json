{"remainingRequest":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/babel-loader/lib/index.js!/Users/medetkalpebaev/Documents/crm_sistem/node_modules/eslint-loader/index.js??ref--13-0!/Users/medetkalpebaev/Documents/crm_sistem/src/store/modules/feed.js","dependencies":[{"path":"/Users/medetkalpebaev/Documents/crm_sistem/src/store/modules/feed.js","mtime":1599941887000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL21lZGV0a2FscGViYWV2L0RvY3VtZW50cy9jcm1fc2lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Cgp2YXIgX211dGF0aW9uczsKCmltcG9ydCBmZWVkQXBpIGZyb20gJ0AvYXBpL2ZlZWQnOwp2YXIgc3RhdGUgPSB7CiAgZGF0YTogbnVsbCwKICBpc0xvYWRpbmc6IGZhbHNlLAogIGVycm9yOiBudWxsCn07CmV4cG9ydCB2YXIgbXV0YXRpb25UeXBlcyA9IHsKICBnZXRGZWVkU3RhcnQ6ICdbZmVlZF0gR2V0IGZlZWQgc3RhcnQnLAogIGdldEZlZWRTdWNjZXNzOiAnW2ZlZWRdIEdldCBmZWVkIHN1Y2Nlc3MnLAogIGdldEZlZWRGYWlsdXJlOiAnW2ZlZWRdIEdldCBmZWVkIGZhaWx1cmUnCn07CmV4cG9ydCB2YXIgYWN0aW9uVHlwZXMgPSB7CiAgZ2V0RmVlZDogJ1tmZWVkXSBHZXQgZmVlZCcKfTsKdmFyIG11dGF0aW9ucyA9IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBtdXRhdGlvblR5cGVzLmdldEZlZWRTdGFydCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUuaXNMb2FkaW5nID0gdHJ1ZTsKICBzdGF0ZS5kYXRhID0gbnVsbDsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBtdXRhdGlvblR5cGVzLmdldEZlZWRTdWNjZXNzLCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICBzdGF0ZS5pc0xvYWRpbmcgPSBmYWxzZTsKICBzdGF0ZS5kYXRhID0gcGF5bG9hZDsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBtdXRhdGlvblR5cGVzLmdldEZlZWRGYWlsdXJlLCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5pc0xvYWRpbmcgPSBmYWxzZTsKfSksIF9tdXRhdGlvbnMpOwoKdmFyIGFjdGlvbnMgPSBfZGVmaW5lUHJvcGVydHkoe30sIGFjdGlvblR5cGVzLmdldEZlZWQsIGZ1bmN0aW9uIChjb250ZXh0LCBfcmVmKSB7CiAgdmFyIGFwaVVybCA9IF9yZWYuYXBpVXJsOwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgY29udGV4dC5jb21taXQobXV0YXRpb25UeXBlcy5nZXRGZWVkU3RhcnQsIGFwaVVybCk7CiAgICBmZWVkQXBpLmdldEZlZWQoYXBpVXJsKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICBjb250ZXh0LmNvbW1pdChtdXRhdGlvblR5cGVzLmdldEZlZWRTdWNjZXNzLCByZXNwb25zZS5kYXRhKTsKICAgICAgcmVzb2x2ZShyZXNwb25zZS5kYXRhKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgY29udGV4dC5jb21taXQobXV0YXRpb25UeXBlcy5nZXRGZWVkRmFpbHVyZSk7CiAgICB9KTsKICB9KTsKfSk7CgpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/Users/medetkalpebaev/Documents/crm_sistem/src/store/modules/feed.js"],"names":["feedApi","state","data","isLoading","error","mutationTypes","getFeedStart","getFeedSuccess","getFeedFailure","actionTypes","getFeed","mutations","payload","actions","context","apiUrl","Promise","resolve","commit","then","response","catch"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,YAApB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,IADM;AAEZC,EAAAA,SAAS,EAAE,KAFC;AAGZC,EAAAA,KAAK,EAAE;AAHK,CAAd;AAMA,OAAO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,YAAY,EAAE,uBADa;AAE3BC,EAAAA,cAAc,EAAE,yBAFW;AAG3BC,EAAAA,cAAc,EAAE;AAHW,CAAtB;AAMP,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,OAAO,EAAE;AADgB,CAApB;AAIP,IAAMC,SAAS,iDACZN,aAAa,CAACC,YADF,YACgBL,KADhB,EACuB;AAClCA,EAAAA,KAAK,CAACE,SAAN,GAAkB,IAAlB;AACAF,EAAAA,KAAK,CAACC,IAAN,GAAa,IAAb;AACD,CAJY,+BAKZG,aAAa,CAACE,cALF,YAKkBN,KALlB,EAKyBW,OALzB,EAKkC;AAC7CX,EAAAA,KAAK,CAACE,SAAN,GAAkB,KAAlB;AACAF,EAAAA,KAAK,CAACC,IAAN,GAAaU,OAAb;AACD,CARY,+BASZP,aAAa,CAACG,cATF,YASkBP,KATlB,EASyB;AACpCA,EAAAA,KAAK,CAACE,SAAN,GAAkB,KAAlB;AACD,CAXY,cAAf;;AAcA,IAAMU,OAAO,uBACVJ,WAAW,CAACC,OADF,YACWI,OADX,QAC8B;AAAA,MAATC,MAAS,QAATA,MAAS;AACvC,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BH,IAAAA,OAAO,CAACI,MAAR,CAAeb,aAAa,CAACC,YAA7B,EAA2CS,MAA3C;AACAf,IAAAA,OAAO,CACJU,OADH,CACWK,MADX,EAEGI,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBN,MAAAA,OAAO,CAACI,MAAR,CAAeb,aAAa,CAACE,cAA7B,EAA6Ca,QAAQ,CAAClB,IAAtD;AACAe,MAAAA,OAAO,CAACG,QAAQ,CAAClB,IAAV,CAAP;AACD,KALH,EAMGmB,KANH,CAMS,YAAM;AACXP,MAAAA,OAAO,CAACI,MAAR,CAAeb,aAAa,CAACG,cAA7B;AACD,KARH;AASD,GAXM,CAAP;AAYD,CAdU,CAAb;;AAiBA,eAAe;AACbP,EAAAA,KAAK,EAALA,KADa;AAEbY,EAAAA,OAAO,EAAPA,OAFa;AAGbF,EAAAA,SAAS,EAATA;AAHa,CAAf","sourcesContent":["import feedApi from '@/api/feed'\n\nconst state = {\n  data: null,\n  isLoading: false,\n  error: null\n}\n\nexport const mutationTypes = {\n  getFeedStart: '[feed] Get feed start',\n  getFeedSuccess: '[feed] Get feed success',\n  getFeedFailure: '[feed] Get feed failure'\n}\n\nexport const actionTypes = {\n  getFeed: '[feed] Get feed'\n}\n\nconst mutations = {\n  [mutationTypes.getFeedStart](state) {\n    state.isLoading = true\n    state.data = null\n  },\n  [mutationTypes.getFeedSuccess](state, payload) {\n    state.isLoading = false\n    state.data = payload\n  },\n  [mutationTypes.getFeedFailure](state) {\n    state.isLoading = false\n  }\n}\n\nconst actions = {\n  [actionTypes.getFeed](context, {apiUrl}) {\n    return new Promise(resolve => {\n      context.commit(mutationTypes.getFeedStart, apiUrl)\n      feedApi\n        .getFeed(apiUrl)\n        .then(response => {\n          context.commit(mutationTypes.getFeedSuccess, response.data)\n          resolve(response.data)\n        })\n        .catch(() => {\n          context.commit(mutationTypes.getFeedFailure)\n        })\n    })\n  }\n}\n\nexport default {\n  state,\n  actions,\n  mutations\n}\n\n"]}]}
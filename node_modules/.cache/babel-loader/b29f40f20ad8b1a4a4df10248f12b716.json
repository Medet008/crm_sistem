{"remainingRequest":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/babel-loader/lib/index.js!/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medetkalpebaev/Documents/crm_sistem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medetkalpebaev/Documents/crm_sistem/src/views/Settings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medetkalpebaev/Documents/crm_sistem/src/views/Settings.vue","mtime":1599941887000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL21lZGV0a2FscGViYWV2L0RvY3VtZW50cy9jcm1fc2lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgZ2V0dGVyVHlwZXMgYXMgYXV0aEdldHRlclR5cGVzLCBhY3Rpb25UeXBlcyBhcyBhdXRoQWN0aW9uVHlwZXMgfSBmcm9tICdAL3N0b3JlL21vZHVsZXMvYXV0aCc7CmltcG9ydCBNY3ZWYWxpZGF0aW9uRXJyb3JzIGZyb20gJ0AvY29tcG9uZW50cy9WYWxpZGF0aW9uRXJyb3JzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNY3ZTZXR0aW5ncycsCiAgY29tcG9uZW50czogewogICAgTWN2VmFsaWRhdGlvbkVycm9yczogTWN2VmFsaWRhdGlvbkVycm9ycwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZSh7CiAgICBpc1N1Ym1pdHRpbmc6IGZ1bmN0aW9uIGlzU3VibWl0dGluZyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2V0dGluZ3MuaXNTdWJtaXR0aW5nOwogICAgfSwKICAgIHZhbGlkYXRpb25FcnJvcnM6IGZ1bmN0aW9uIHZhbGlkYXRpb25FcnJvcnMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnNldHRpbmdzLnZhbGlkYXRpb25FcnJvcnM7CiAgICB9CiAgfSkpLCBtYXBHZXR0ZXJzKHsKICAgIGN1cnJlbnRVc2VyOiBhdXRoR2V0dGVyVHlwZXMuY3VycmVudFVzZXIKICB9KSksIHt9LCB7CiAgICBmb3JtOiBmdW5jdGlvbiBmb3JtKCkgewogICAgICBpZiAodGhpcy5jdXJyZW50VXNlcikgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICB1c2VybmFtZTogdGhpcy5jdXJyZW50VXNlci51c2VybmFtZSwKICAgICAgICAgIGJpbzogdGhpcy5jdXJyZW50VXNlci5iaW8sCiAgICAgICAgICBpbWFnZTogdGhpcy5jdXJyZW50VXNlci5pbWFnZSwKICAgICAgICAgIGVtYWlsOiB0aGlzLmN1cnJlbnRVc2VyLmVtYWlsLAogICAgICAgICAgcGFzc3dvcmQ6ICcnCiAgICAgICAgfTsKICAgICAgfQoKICAgICAgcmV0dXJuIHsKICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgYmlvOiAnJywKICAgICAgICBpbWFnZTogJycsCiAgICAgICAgZW1haWw6ICcnLAogICAgICAgIHBhc3N3b3JkOiAnJwogICAgICB9OwogICAgfQogIH0pLAogIG1ldGhvZHM6IHsKICAgIG9uU3VibWl0OiBmdW5jdGlvbiBvblN1Ym1pdCgpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goYXV0aEFjdGlvblR5cGVzLnVwZGF0ZUN1cnJlbnRVc2VyLCB7CiAgICAgICAgY3VycmVudFVzZXJJbnB1dDogdGhpcy5mb3JtCiAgICAgIH0pOwogICAgfSwKICAgIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goYXV0aEFjdGlvblR5cGVzLmxvZ291dCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgIG5hbWU6ICdnbG9iYWxGZWVkJwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AACA,SACA,WAAA,IAAA,eADA,EAEA,WAAA,IAAA,eAFA,QAGA,sBAHA;AAIA,OAAA,mBAAA,MAAA,+BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,mBAAA,EAAA;AADA,GAFA;AAKA,EAAA,QAAA,gDACA,QAAA,CAAA;AACA,IAAA,YAAA,EAAA,sBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,QAAA,CAAA,YAAA;AAAA,KADA;AAEA,IAAA,gBAAA,EAAA,0BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,QAAA,CAAA,gBAAA;AAAA;AAFA,GAAA,CADA,GAKA,UAAA,CAAA;AACA,IAAA,WAAA,EAAA,eAAA,CAAA;AADA,GAAA,CALA;AAQA,IAAA,IARA,kBAQA;AACA,UAAA,KAAA,WAAA,EAAA;AACA,eAAA;AACA,UAAA,QAAA,EAAA,KAAA,WAAA,CAAA,QADA;AAEA,UAAA,GAAA,EAAA,KAAA,WAAA,CAAA,GAFA;AAGA,UAAA,KAAA,EAAA,KAAA,WAAA,CAAA,KAHA;AAIA,UAAA,KAAA,EAAA,KAAA,WAAA,CAAA,KAJA;AAKA,UAAA,QAAA,EAAA;AALA,SAAA;AAOA;;AAEA,aAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,GAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,KAAA,EAAA,EAJA;AAKA,QAAA,QAAA,EAAA;AALA,OAAA;AAOA;AA1BA,IALA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,eAAA,CAAA,iBAAA,EAAA;AACA,QAAA,gBAAA,EAAA,KAAA;AADA,OAAA;AAGA,KALA;AAMA,IAAA,MANA,oBAMA;AAAA;;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,eAAA,CAAA,MAAA,EAAA,IAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA,OAFA;AAGA;AAVA;AAjCA,CAAA","sourcesContent":["<template>\n  <div class=\"settings-page\" v-if=\"currentUser\">\n    <div class=\"container page\">\n      <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3 col-xs-12\">\n          <h1 class=\"text-xs-center\">Settings</h1>\n          <mcv-validation-errors\n            v-if=\"validationErrors\"\n            :validation-errors=\"validationErrors\"\n          />\n          <form @submit.prevent=\"onSubmit\">\n            <fieldset>\n              <fieldset class=\"form-group\">\n                <input\n                  type=\"text\"\n                  class=\"form-control form-control-lg\"\n                  v-model=\"form.image\"\n                  placeholder=\"URL of profile image\"\n                />\n              </fieldset>\n\n              <fieldset class=\"form-group\">\n                <input\n                  type=\"text\"\n                  class=\"form-control form-control-lg\"\n                  v-model=\"form.username\"\n                  placeholder=\"Username\"\n                />\n              </fieldset>\n\n              <fieldset class=\"form-group\">\n                <textarea\n                  class=\"form-control form-control-lg\"\n                  v-model=\"form.bio\"\n                  placeholder=\"Short bio about you\"\n                ></textarea>\n              </fieldset>\n\n              <fieldset class=\"form-group\">\n                <input\n                  type=\"text\"\n                  class=\"form-control form-control-lg\"\n                  v-model=\"form.email\"\n                  placeholder=\"Email\"\n                />\n              </fieldset>\n\n              <fieldset class=\"form-group\">\n                <input\n                  type=\"password\"\n                  class=\"form-control form-control-lg\"\n                  v-model=\"form.password\"\n                  placeholder=\"New password\"\n                />\n              </fieldset>\n              <button\n                type=\"submit\"\n                class=\"btn btn-lg btn-primary pull-xs-right\"\n                :disabled=\"isSubmitting\"\n              >\n                Update settings\n              </button>\n            </fieldset>\n          </form>\n          <hr />\n          <button class=\"btn btn-outline-danger\" @click=\"logout\" type=\"text\">\n            Or cick here to logout\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapState, mapGetters} from 'vuex'\nimport {\n  getterTypes as authGetterTypes,\n  actionTypes as authActionTypes\n} from '@/store/modules/auth'\nimport McvValidationErrors from '@/components/ValidationErrors'\n\nexport default {\n  name: 'McvSettings',\n  components: {\n    McvValidationErrors\n  },\n  computed: {\n    ...mapState({\n      isSubmitting: state => state.settings.isSubmitting,\n      validationErrors: state => state.settings.validationErrors\n    }),\n    ...mapGetters({\n      currentUser: authGetterTypes.currentUser\n    }),\n    form() {\n      if (this.currentUser) {\n        return {\n          username: this.currentUser.username,\n          bio: this.currentUser.bio,\n          image: this.currentUser.image,\n          email: this.currentUser.email,\n          password: ''\n        }\n      }\n\n      return {\n        username: '',\n        bio: '',\n        image: '',\n        email: '',\n        password: ''\n      }\n    }\n  },\n  methods: {\n    onSubmit() {\n      this.$store.dispatch(authActionTypes.updateCurrentUser, {\n        currentUserInput: this.form\n      })\n    },\n    logout() {\n      this.$store.dispatch(authActionTypes.logout).then(() => {\n        this.$router.push({name: 'globalFeed'})\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}
{"remainingRequest":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medetkalpebaev/Documents/crm_sistem/src/components/Feed.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medetkalpebaev/Documents/crm_sistem/src/components/Feed.vue","mtime":1599941887000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwU3RhdGV9IGZyb20gJ3Z1ZXgnCmltcG9ydCB7c3RyaW5naWZ5LCBwYXJzZVVybH0gZnJvbSAncXVlcnktc3RyaW5nJwoKaW1wb3J0IHthY3Rpb25UeXBlc30gZnJvbSAnQC9zdG9yZS9tb2R1bGVzL2ZlZWQnCmltcG9ydCBNY3ZQYWdpbmF0aW9uIGZyb20gJ0AvY29tcG9uZW50cy9QYWdpbmF0aW9uJwppbXBvcnQge2xpbWl0fSBmcm9tICdAL2hlbHBlcnMvdmFycycKaW1wb3J0IE1jdkxvYWRpbmcgZnJvbSAnQC9jb21wb25lbnRzL0xvYWRpbmcnCmltcG9ydCBNY3ZFcnJvck1lc3NhZ2UgZnJvbSAnQC9jb21wb25lbnRzL0Vycm9yTWVzc2FnZScKaW1wb3J0IE1jdlRhZ0xpc3QgZnJvbSAnQC9jb21wb25lbnRzL1RhZ0xpc3QnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ01jdkZlZWQnLAogIGNvbXBvbmVudHM6IHsKICAgIE1jdlBhZ2luYXRpb24sCiAgICBNY3ZMb2FkaW5nLAogICAgTWN2RXJyb3JNZXNzYWdlLAogICAgTWN2VGFnTGlzdAogIH0sCiAgcHJvcHM6IHsKICAgIGFwaVVybDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwU3RhdGUoewogICAgICBpc0xvYWRpbmc6IHN0YXRlID0+IHN0YXRlLmZlZWQuaXNMb2FkaW5nLAogICAgICBmZWVkOiBzdGF0ZSA9PiBzdGF0ZS5mZWVkLmRhdGEsCiAgICAgIGVycm9yOiBzdGF0ZSA9PiBzdGF0ZS5mZWVkLmVycm9yCiAgICB9KSwKICAgIGxpbWl0KCkgewogICAgICByZXR1cm4gbGltaXQKICAgIH0sCiAgICBiYXNlVXJsKCkgewogICAgICByZXR1cm4gdGhpcy4kcm91dGUucGF0aAogICAgfSwKICAgIGN1cnJlbnRQYWdlKCkgewogICAgICByZXR1cm4gTnVtYmVyKHRoaXMuJHJvdXRlLnF1ZXJ5LnBhZ2UgfHwgJzEnKQogICAgfSwKICAgIG9mZnNldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFBhZ2UgKiBsaW1pdCAtIGxpbWl0CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgY3VycmVudFBhZ2UoKSB7CiAgICAgIHRoaXMuZmV0Y2hGZWVkKCkKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmZldGNoRmVlZCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaEZlZWQoKSB7CiAgICAgIGNvbnN0IHBhcnNlZFVybCA9IHBhcnNlVXJsKHRoaXMuYXBpVXJsKQogICAgICBjb25zdCBzdHJpbmdpZmllZFBhcmFtcyA9IHN0cmluZ2lmeSh7CiAgICAgICAgbGltaXQsCiAgICAgICAgb2Zmc2V0OiB0aGlzLm9mZnNldCwKICAgICAgICAuLi5wYXJzZWRVcmwucXVlcnkKICAgICAgfSkKICAgICAgY29uc3QgYXBpVXJsV2l0aFBhcmFtcyA9IGAke3BhcnNlZFVybC51cmx9PyR7c3RyaW5naWZpZWRQYXJhbXN9YAogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaChhY3Rpb25UeXBlcy5nZXRGZWVkLCB7YXBpVXJsOiBhcGlVcmxXaXRoUGFyYW1zfSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Feed.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Feed.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <mcv-loading v-if=\"isLoading\" />\n    <mcv-error-message v-if=\"error\" />\n\n    <div v-if=\"feed\">\n      <div\n        class=\"article-preview\"\n        v-for=\"(article, index) in feed.articles\"\n        :key=\"index\"\n      >\n        <div class=\"article-meta\">\n          <router-link\n            :to=\"{name: 'userProfile', params: {slug: article.author.username}}\"\n          >\n            <img :src=\"article.author.image\" />\n          </router-link>\n          <div class=\"info\">\n            <router-link\n              :to=\"{\n                name: 'userProfile',\n                params: {slug: article.author.username}\n              }\"\n            >\n              {{ article.author.username }}\n            </router-link>\n            <span class=\"date\">{{ article.createdAt }}</span>\n          </div>\n          <div class=\"pull-xs-right\">ADD TO FAVORITES</div>\n        </div>\n        <router-link\n          :to=\"{name: 'article', params: {slug: article.slug}}\"\n          class=\"preview-link\"\n        >\n          <h1>{{ article.title }}</h1>\n          <p>{{ article.description }}</p>\n          <span>Read more...</span>\n          <mcv-tag-list :tags=\"article.tagList\" />\n        </router-link>\n      </div>\n      <mcv-pagination\n        :total=\"feed.articlesCount\"\n        :limit=\"limit\"\n        :url=\"baseUrl\"\n        :current-page=\"currentPage\"\n      ></mcv-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\nimport {stringify, parseUrl} from 'query-string'\n\nimport {actionTypes} from '@/store/modules/feed'\nimport McvPagination from '@/components/Pagination'\nimport {limit} from '@/helpers/vars'\nimport McvLoading from '@/components/Loading'\nimport McvErrorMessage from '@/components/ErrorMessage'\nimport McvTagList from '@/components/TagList'\n\nexport default {\n  name: 'McvFeed',\n  components: {\n    McvPagination,\n    McvLoading,\n    McvErrorMessage,\n    McvTagList\n  },\n  props: {\n    apiUrl: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    ...mapState({\n      isLoading: state => state.feed.isLoading,\n      feed: state => state.feed.data,\n      error: state => state.feed.error\n    }),\n    limit() {\n      return limit\n    },\n    baseUrl() {\n      return this.$route.path\n    },\n    currentPage() {\n      return Number(this.$route.query.page || '1')\n    },\n    offset() {\n      return this.currentPage * limit - limit\n    }\n  },\n  watch: {\n    currentPage() {\n      this.fetchFeed()\n    }\n  },\n  mounted() {\n    this.fetchFeed()\n  },\n  methods: {\n    fetchFeed() {\n      const parsedUrl = parseUrl(this.apiUrl)\n      const stringifiedParams = stringify({\n        limit,\n        offset: this.offset,\n        ...parsedUrl.query\n      })\n      const apiUrlWithParams = `${parsedUrl.url}?${stringifiedParams}`\n      this.$store.dispatch(actionTypes.getFeed, {apiUrl: apiUrlWithParams})\n    }\n  }\n}\n</script>\n"]}]}
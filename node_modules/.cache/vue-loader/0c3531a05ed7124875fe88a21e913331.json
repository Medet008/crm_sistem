{"remainingRequest":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medetkalpebaev/Documents/crm_sistem/src/views/Settings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medetkalpebaev/Documents/crm_sistem/src/views/Settings.vue","mtime":1599941887000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/medetkalpebaev/Documents/crm_sistem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwU3RhdGUsIG1hcEdldHRlcnN9IGZyb20gJ3Z1ZXgnCmltcG9ydCB7CiAgZ2V0dGVyVHlwZXMgYXMgYXV0aEdldHRlclR5cGVzLAogIGFjdGlvblR5cGVzIGFzIGF1dGhBY3Rpb25UeXBlcwp9IGZyb20gJ0Avc3RvcmUvbW9kdWxlcy9hdXRoJwppbXBvcnQgTWN2VmFsaWRhdGlvbkVycm9ycyBmcm9tICdAL2NvbXBvbmVudHMvVmFsaWRhdGlvbkVycm9ycycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTWN2U2V0dGluZ3MnLAogIGNvbXBvbmVudHM6IHsKICAgIE1jdlZhbGlkYXRpb25FcnJvcnMKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZSh7CiAgICAgIGlzU3VibWl0dGluZzogc3RhdGUgPT4gc3RhdGUuc2V0dGluZ3MuaXNTdWJtaXR0aW5nLAogICAgICB2YWxpZGF0aW9uRXJyb3JzOiBzdGF0ZSA9PiBzdGF0ZS5zZXR0aW5ncy52YWxpZGF0aW9uRXJyb3JzCiAgICB9KSwKICAgIC4uLm1hcEdldHRlcnMoewogICAgICBjdXJyZW50VXNlcjogYXV0aEdldHRlclR5cGVzLmN1cnJlbnRVc2VyCiAgICB9KSwKICAgIGZvcm0oKSB7CiAgICAgIGlmICh0aGlzLmN1cnJlbnRVc2VyKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHVzZXJuYW1lOiB0aGlzLmN1cnJlbnRVc2VyLnVzZXJuYW1lLAogICAgICAgICAgYmlvOiB0aGlzLmN1cnJlbnRVc2VyLmJpbywKICAgICAgICAgIGltYWdlOiB0aGlzLmN1cnJlbnRVc2VyLmltYWdlLAogICAgICAgICAgZW1haWw6IHRoaXMuY3VycmVudFVzZXIuZW1haWwsCiAgICAgICAgICBwYXNzd29yZDogJycKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiB7CiAgICAgICAgdXNlcm5hbWU6ICcnLAogICAgICAgIGJpbzogJycsCiAgICAgICAgaW1hZ2U6ICcnLAogICAgICAgIGVtYWlsOiAnJywKICAgICAgICBwYXNzd29yZDogJycKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25TdWJtaXQoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKGF1dGhBY3Rpb25UeXBlcy51cGRhdGVDdXJyZW50VXNlciwgewogICAgICAgIGN1cnJlbnRVc2VySW5wdXQ6IHRoaXMuZm9ybQogICAgICB9KQogICAgfSwKICAgIGxvZ291dCgpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goYXV0aEFjdGlvblR5cGVzLmxvZ291dCkudGhlbigoKSA9PiB7CiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goe25hbWU6ICdnbG9iYWxGZWVkJ30pCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Settings.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"settings-page\" v-if=\"currentUser\">\n    <div class=\"container page\">\n      <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3 col-xs-12\">\n          <h1 class=\"text-xs-center\">Settings</h1>\n          <mcv-validation-errors\n            v-if=\"validationErrors\"\n            :validation-errors=\"validationErrors\"\n          />\n          <form @submit.prevent=\"onSubmit\">\n            <fieldset>\n              <fieldset class=\"form-group\">\n                <input\n                  type=\"text\"\n                  class=\"form-control form-control-lg\"\n                  v-model=\"form.image\"\n                  placeholder=\"URL of profile image\"\n                />\n              </fieldset>\n\n              <fieldset class=\"form-group\">\n                <input\n                  type=\"text\"\n                  class=\"form-control form-control-lg\"\n                  v-model=\"form.username\"\n                  placeholder=\"Username\"\n                />\n              </fieldset>\n\n              <fieldset class=\"form-group\">\n                <textarea\n                  class=\"form-control form-control-lg\"\n                  v-model=\"form.bio\"\n                  placeholder=\"Short bio about you\"\n                ></textarea>\n              </fieldset>\n\n              <fieldset class=\"form-group\">\n                <input\n                  type=\"text\"\n                  class=\"form-control form-control-lg\"\n                  v-model=\"form.email\"\n                  placeholder=\"Email\"\n                />\n              </fieldset>\n\n              <fieldset class=\"form-group\">\n                <input\n                  type=\"password\"\n                  class=\"form-control form-control-lg\"\n                  v-model=\"form.password\"\n                  placeholder=\"New password\"\n                />\n              </fieldset>\n              <button\n                type=\"submit\"\n                class=\"btn btn-lg btn-primary pull-xs-right\"\n                :disabled=\"isSubmitting\"\n              >\n                Update settings\n              </button>\n            </fieldset>\n          </form>\n          <hr />\n          <button class=\"btn btn-outline-danger\" @click=\"logout\" type=\"text\">\n            Or cick here to logout\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapState, mapGetters} from 'vuex'\nimport {\n  getterTypes as authGetterTypes,\n  actionTypes as authActionTypes\n} from '@/store/modules/auth'\nimport McvValidationErrors from '@/components/ValidationErrors'\n\nexport default {\n  name: 'McvSettings',\n  components: {\n    McvValidationErrors\n  },\n  computed: {\n    ...mapState({\n      isSubmitting: state => state.settings.isSubmitting,\n      validationErrors: state => state.settings.validationErrors\n    }),\n    ...mapGetters({\n      currentUser: authGetterTypes.currentUser\n    }),\n    form() {\n      if (this.currentUser) {\n        return {\n          username: this.currentUser.username,\n          bio: this.currentUser.bio,\n          image: this.currentUser.image,\n          email: this.currentUser.email,\n          password: ''\n        }\n      }\n\n      return {\n        username: '',\n        bio: '',\n        image: '',\n        email: '',\n        password: ''\n      }\n    }\n  },\n  methods: {\n    onSubmit() {\n      this.$store.dispatch(authActionTypes.updateCurrentUser, {\n        currentUserInput: this.form\n      })\n    },\n    logout() {\n      this.$store.dispatch(authActionTypes.logout).then(() => {\n        this.$router.push({name: 'globalFeed'})\n      })\n    }\n  }\n}\n</script>\n"]}]}